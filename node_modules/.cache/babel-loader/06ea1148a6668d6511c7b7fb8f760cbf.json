{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nexport const useDate = () => {\n  _s();\n\n  const locale = 'en';\n  const [today, setDate] = React.useState(new Date()); // Save the current date to be able to trigger an update\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      // Creates an interval which will update the current data every minute\n      // This will trigger a rerender every component that uses the useDate hook.\n      setDate(new Date());\n    }, 60 * 1000);\n    return () => {\n      clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\n    };\n  }, []);\n  const day = today.toLocaleDateString(locale, {\n    weekday: 'long'\n  });\n  const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, {\n    month: 'long'\n  })}\\n\\n`;\n  const hour = today.getHours();\n  const wish = `Good ${hour < 12 && 'Morning' || hour < 17 && 'Afternoon' || 'Evening'}, `;\n  const time = today.toLocaleTimeString(locale, {\n    hour: 'numeric',\n    hour12: true,\n    minute: 'numeric'\n  });\n  return {\n    date,\n    time,\n    wish\n  };\n};\n\n_s(useDate, \"9i+dpEfAuUB6527zD7xQc9beSEk=\");","map":{"version":3,"sources":["C:/Users/Wael/Documents/GitHub/LazyAiOwl/src/time.jsx"],"names":["React","useState","useContext","useDate","locale","today","setDate","Date","useEffect","timer","setInterval","clearInterval","day","toLocaleDateString","weekday","date","getDate","month","hour","getHours","wish","time","toLocaleTimeString","hour12","minute"],"mappings":";;AAAA,OAAOA,KAAP,IACIC,QADJ,EAEIC,UAFJ,QAGS,OAHT;AAIA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAMC,MAAM,GAAG,IAAf;AACA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBN,KAAK,CAACC,QAAN,CAAe,IAAIM,IAAJ,EAAf,CAAzB,CAFyB,CAE4B;;AAErDP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AAClB,UAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAAE;AAClC;AACAJ,MAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACD,KAH0B,EAGxB,KAAK,IAHmB,CAAzB;AAIF,WAAO,MAAM;AACXI,MAAAA,aAAa,CAACF,KAAD,CAAb,CADW,CACW;AACvB,KAFD;AAGD,GARD,EAQG,EARH;AAUA,QAAMG,GAAG,GAAGP,KAAK,CAACQ,kBAAN,CAAyBT,MAAzB,EAAiC;AAAEU,IAAAA,OAAO,EAAE;AAAX,GAAjC,CAAZ;AACA,QAAMC,IAAI,GAAI,GAAEH,GAAI,KAAIP,KAAK,CAACW,OAAN,EAAgB,IAAGX,KAAK,CAACQ,kBAAN,CAAyBT,MAAzB,EAAiC;AAAEa,IAAAA,KAAK,EAAE;AAAT,GAAjC,CAAoD,MAA/F;AAEA,QAAMC,IAAI,GAAGb,KAAK,CAACc,QAAN,EAAb;AACA,QAAMC,IAAI,GAAI,QAAQF,IAAI,GAAG,EAAP,IAAa,SAAd,IAA6BA,IAAI,GAAG,EAAP,IAAa,WAA1C,IAA0D,SAAU,IAAzF;AAEA,QAAMG,IAAI,GAAGhB,KAAK,CAACiB,kBAAN,CAAyBlB,MAAzB,EAAiC;AAAEc,IAAAA,IAAI,EAAE,SAAR;AAAmBK,IAAAA,MAAM,EAAE,IAA3B;AAAiCC,IAAAA,MAAM,EAAE;AAAzC,GAAjC,CAAb;AAEA,SAAO;AACLT,IAAAA,IADK;AAELM,IAAAA,IAFK;AAGLD,IAAAA;AAHK,GAAP;AAKD,CA3BI;;GAAMjB,O","sourcesContent":["import React, {\r\n    useState,\r\n    useContext\r\n  } from 'react'\r\nexport const useDate = () => {\r\n    const locale = 'en';\r\n    const [today, setDate] = React.useState(new Date()); // Save the current date to be able to trigger an update\r\n  \r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => { // Creates an interval which will update the current data every minute\r\n        // This will trigger a rerender every component that uses the useDate hook.\r\n        setDate(new Date());\r\n      }, 60 * 1000);\r\n      return () => {\r\n        clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\r\n      }\r\n    }, []);\r\n  \r\n    const day = today.toLocaleDateString(locale, { weekday: 'long' });\r\n    const date = `${day}, ${today.getDate()} ${today.toLocaleDateString(locale, { month: 'long' })}\\n\\n`;\r\n  \r\n    const hour = today.getHours();\r\n    const wish = `Good ${(hour < 12 && 'Morning') || (hour < 17 && 'Afternoon') || 'Evening'}, `;\r\n  \r\n    const time = today.toLocaleTimeString(locale, { hour: 'numeric', hour12: true, minute: 'numeric' });\r\n  \r\n    return {\r\n      date,\r\n      time,\r\n      wish,\r\n    };\r\n  };"]},"metadata":{},"sourceType":"module"}